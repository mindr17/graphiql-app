import { readerClient } from './clientGq';
import { gql } from 'graphql-request';
import { CountriesQueryDocument, CountriesQueryQuery } from '../gql/graphql';

const query = gql`
  query CountriesQuery{
    country2s{
      id
      slug
      updated_at
      living_cost_avg
      passport_power_score
      quality_of_life_score
      crime_safe_score
      medicine_score
      cities(
        filter:{
          sort: { _in: [1]}
        }
      ){
        title
        sort
        numbeo_cost
        air_quality
        expatistan_cost
        expatistan_link
        expatistan_visit_doctor
        human_per_square
        living_cost_cost
        living_cost_doctor
        numbeo_income
        living_cost_cost
        cover{
          id
          title
        }
      }
      passport{
        power_hey
        power_index
        airport_visa
        easy_visa
        european_union
        need_visa_count
        short_body
        visa_free_count
        easy_visa
        body
        passportPhoto{
          id
          title
        }
      }
      finance{
        capital_tax_min
        gdp_growth
        gdp_per_capita_ppp
        gini
        global_innovation_index
        gov_healthcare_costs
        ie_tax_max
        import
        inflation_per_year
        international_tax_max
        international_tax_min
        living_cost_cost
        living_cost_income
        local_currency_name
        local_currency_symbol
        mid_income_after_tax
        mid_income_local_currency
        minus
        no_work
        numbeo_income
        plus
        population
        vat_min
        world_competitiveness_index
        dividends_tax_min
        easy_business
        economic_freedom_index
        economic_freedom_world
        expatistan_cost
        export
      }
      crime{
        body
        insurly_rating
        kidnapping_per_100_k
        legatum_safety
        numbeo_crime_index
        oc_index_rating
        peace_rating
        road_death_per_100_k
        corruption_perception
        short_body
        title
        women_security
        gallup_law
        homicide_100_k
      }
      medicine{
        title
        cost_comment
        women_life_years
        men_life_years
        ratio_cost_quality_comment
        need_insurance_comment
        medicine_comment
        insurance_comment
        stomatology_comment
        covid_vaccinated
        ceo_world_medicine_rating
        ceo_world_medicine_cost_rating
        covid_protection_score
        legatum_health
        global_health_security
        numbeo_health
        medicine_cost_2017
        expatistan_visit_doctor
        living_cost_doctor
      }
      quality_of_life{
        id
        title
        numbeo_quality_of_life
        created_by_id
        updated_by_id
        world_happiness
        world_data
        ceo_world
        social_progress
        human_development
        locale
        body
        legatum_prosperity_index
      }
      translations(
        filter: {
          languages_id: { _in: []}
        }
      ){
        name
      }
      map_link
    }
    passports_labels{
      translations{
        passportPowerScore
      }
    }
    configs{
      inverted_metrics
    }
    quality_of_lives_configs{
      world_data_MAX
      human_development_MAX
      ceo_world_MAX
      social_progress_MAX
      numbeo_quality_of_life_MAX
      world_happiness_MAX
      legatum_prosperity_index_MAX
      world_data_WEIGHT
      human_development_WEIGHT
      ceo_world_WEIGHT
      social_progress_WEIGHT
      numbeo_quality_of_life_WEIGHT
      world_happiness_WEIGHT
      legatum_prosperity_index_WEIGHT
    }
    finances_configs{
      world_competitiveness_index_MAX
      easy_business_MAX
      economic_freedom_index_MAX
      economic_freedom_world_MAX
      global_innovation_index_MAX
      global_innovation_index_WEIGHT
      world_competitiveness_index_WEIGHT
      economic_freedom_index_WEIGHT
      economic_freedom_world_WEIGHT
      translations{
        easy_business_LABEL
        import_LABEL
        inflation_per_year_LABEL
        no_work_LABEL
        numbeo_income_LABEL
        world_competitiveness_index_LABEL
        economic_freedom_index_LABEL
        economic_freedom_world_LABEL
        export_LABEL
        gdp_growth_LABEL
        gdp_per_capita_ppp_LABEL
        gini_LABEL
        global_innovation_index_LABEL
      }
    }
    crimes_configs{
      corruption_perception_MAX
      legatum_safety_MAX
      numbeo_crime_index_MAX
      oc_index_rating_MAX
      peace_rating_MAX
      women_security_MAX
      gallup_law_MAX
      insurly_rating_MAX
      numbeo_crime_index_WEIGHT
      legatum_safety_WEIGHT
      oc_index_rating_WEIGHT
      peace_rating_WEIGHT
      corruption_perception_WEIGHT
      women_security_WEIGHT
      gallup_law_WEIGHT
      insurly_rating_WEIGHT
      translations{
        corruption_perception_LABEL
        oc_index_rating_LABEL
        peace_rating_LABEL
        road_death_per_100_k_LABEL
        women_security_LABEL
        gallup_law_LABEL
        homicide_100_k_LABEL
        insurly_rating_LABEL
        kidnapping_per_100_k_LABEL
        legatum_safety_LABEL
        numbeo_crime_index_LABEL
      }
    }
    medicines_configs{
      ceo_world_medicine_rating_MAX
      covid_vaccinated_MAX
      covid_protection_score_MAX
      numbeo_health_MAX
      legatum_health_MAX
      global_health_security_MAX
      ceo_world_medicine_rating_WEIGHT
      legatum_health_WEIGHT
      numbeo_health_WEIGHT
      covid_protection_score_WEIGHT
      covid_vaccinated_WEIGHT
      global_health_security_WEIGHT
      translations{
        ceo_world_medicine_rating_LABEL
        covid_protection_score_LABEL
        covid_vaccinated_LABEL
        global_health_security_LABEL
        legatum_health_LABEL
        numbeo_health_LABEL
      }
    }
  }
`;

export const readData = async (locale: string | undefined): Promise<CountriesQueryQuery> => {
  if (!locale) throw new Error('locale is undefined!');

  const variables = {
    locale: 'en-EN',
  };

  const resp = await readerClient.request(CountriesQueryDocument, variables).catch((e: any) => console.error(e)),

  if (!resp) throw new Error('bad data from api');

  const data: CountriesQueryQuery = resp;

  return data;
};
